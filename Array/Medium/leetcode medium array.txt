1)Longest Palindromic Substring

Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"

solution:--
class Solution:
    def is_palindrome(self,substring):
        return substring == substring[::-1]
    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        max_length = 0
        result = ""

        for i in range(n):
            for j in range(i, n):
                substring = s[i:j + 1]
                if self.is_palindrome(substring) and len(substring) > max_length:
                    max_length = len(substring)
                    result = substring

        return result
        
